branches:
  except:
    - gh-pages

configuration:
  - Debug
  - Release

image: Visual Studio 2017

skip_commits:
  files:
    - README.md

skip_branch_with_pr: true
  
# Taken from https://boblokerse.github.io/2015/11/03/GitVersion-versioning-made-easy-and-dry/
install:
  - ver
  - ps: choco install -y -r resharper-clt.portable
  - ps: choco install -y -r fxcop
  - ps: choco install -y -r InnoSetup
  - ps: |
      function gitVersion(){
        $gitVersion=git describe --tags --abbrev=0 $env:APPVEYOR_REPO_BRANCH
        
        $newVersion="$gitVersion.$env:APPVEYOR_BUILD_NUMBER"
        $env:newhash=git rev-parse HEAD
        $env:shorthash=git rev-parse --short HEAD
        write-host "Using hash for build version: $newhash"
        write-host "Update appveyor build version to: $newVersion"
        $env:appveyor_build_version="$newVersion"
        appveyor UpdateBuild -Version "$newVersion"
      }
      gitVersion
  - ps: |
      (Get-Content Buttplug.Components.Controls\ButtplugTabControl.xaml.cs).replace('SENTRY_API_URL', $env:sentry_api_url) | Set-Content Buttplug.Components.Controls\ButtplugTabControl.xaml.cs
      
      
# patch the assembly version, but only in our own directories
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: $(appveyor_build_version)
  assembly_file_version: $(appveyor_build_version)
  assembly_informational_version: $(newhash)

before_build:
  - nuget restore
build:
  parallel: true
  project: Buttplug.sln
after_build:
  - cmd: InspectCode.exe -o=resharper-clt-output.xml --project=Buttplug* Buttplug.sln
  - ps: $result = [xml](Get-Content .\resharper-clt-output.xml)
  - ps: $result.Report.Issues.ChildNodes | ForEach-Object {$project = $_.Name; $_.ChildNodes | ForEach-Object {Add-AppveyorCompilationMessage -Message $_.Message -Line $_.Line -FileName $_.File -ProjectName $project}}
test_script:
  - ps: .\packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -returntargetcode -register:user -target:"%xunit20%\xunit.console.x86.exe" -targetargs:"Buttplug.Server.Test\bin\$env:CONFIGURATION\Buttplug.Server.Test.dll Buttplug.Client.Test\bin\$env:CONFIGURATION\Buttplug.Client.Test.dll Buttplug.Apps.WebsocketServerGUI.Test\bin\$env:CONFIGURATION\Buttplug.Apps.WebsocketServerGUI.Test.dll Buttplug.Apps.KiirooEmulatorGUI.Test\bin\$env:CONFIGURATION\Buttplug.Apps.KiirooEmulatorGUI.Test.dll -noshadow" -output:"coverage.xml" -excludebyfile:"*\*LibLog.cs"
after_test:
  - ps: If (($env:CONFIGURATION -imatch "Debug")) { "SET PATH=C:\\Python34;C:\\Python34\\Scripts;%PATH%" }
  - ps: If (($env:CONFIGURATION -imatch "Debug")) { pip install codecov }
  - ps: If (($env:CONFIGURATION -imatch "Debug")) { codecov -f "coverage.xml" -X gcov }
  - ps: set PATH=%PATH%;"C:\\Program Files (x86)\\Inno Setup 5"
  - ps: iscc buttplug-installer.iss   
  - ps: installer\buttplug-installer.exe /VERYSILENT
  # Test currently doesn't work, possibly because installer is blocked by access control dialog?
  #- ps: test\check-registry.ps1
  - ps: Push-AppveyorArtifact installer\buttplug-installer.exe -FileName Buttplug-$env:CONFIGURATION-$env:APPVEYOR_BUILD_VERSION-installer.exe
cache:
  - packages -> **\packages.config
  # Cache chocolatey packages
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml
environment:
  sentry_api_url:
    secure: grqYfjT9kMwONAdl/iwYcI7NOEd8ounzFFehZIWX3I3y1oiIa7F4GrZJKNqWcucEhyyn9SpAnXiheKAJU/kl0nFT7QUlnXplEE9c/krbWDEy0mSMy5DaFv1+MijZ5hjm
